---

- name: create kafka directories
  file:
    path={{ item }}
    state=directory
    mode=0744
  with_items:
    - "{{ kafka_install_dir }}"
    - "{{ kafka_data_log_dir }}"
  tags: kafka

- name: check for existing install
  stat: path={{ kafka_install_dir }}/kafka_2.9.2-{{ kafka_version }}
  register: kafka
  tags: kafka

- name: download kafka
  get_url:
    url="{{ kafka_source }}/{{ kafka_version }}/kafka_2.9.2-{{ kafka_version }}.tgz"
    dest=/tmp/kafka_2.9.2-{{ kafka_version }}.tgz
    mode=0644
    validate_certs=no
  when: kafka.stat.isdir is not defined
  tags: kafka

- name: extract kafka
  unarchive:
    src=/tmp/kafka_2.9.2-{{ kafka_version }}.tgz
    dest={{ kafka_install_dir }}
    copy=no
  when: kafka.stat.isdir is not defined
  tags: kafka

- name: delete temporary kafka file
  file:
    path=/tmp/kafka_2.9.2-{{ kafka_version }}.tgz
    state=absent
  ignore_errors: yes
  tags: kafka

- name: create kafka symlink
  file:
    path={{ kafka_install_dir }}/default
    state=link
    src={{ kafka_install_dir }}/kafka_2.9.2-{{ kafka_version }}
  tags: kafka

- name: configure kafka brokers
  template:
    src=server.properties.j2
    dest={{ kafka_config_dir }}/server.properties
    mode=0644
  notify:
    - restart kafka
  tags: kafka

- name: configure log4j
  template:
    src=log4j.properties.j2
    dest={{ kafka_config_dir }}/log4j.properties
    mode=0644
  notify:
    - restart kafka
  tags: kafka

- name: configure kafka consumer
  template:
    src=consumer.properties.j2
    dest={{ kafka_config_dir }}/consumer.properties
    mode=0644
  notify:
    - restart kafka
  tags: kafka

- name: copy supervisord config
  template:
    src=kafka-supervisord.conf.j2
    dest={{ supervisord_programs_dir }}/kafka-supervisord.conf
    mode=0644
  notify:
    - reread supervisord
  tags: kafka

- name: set up aliases
  lineinfile: dest="/root/.bashrc" line="export KAFKA={{ kafka_install_dir }}/default"
  lineinfile: dest="/root/.bashrc" line="export PATH={{ kafka_install_dir }}/default/bin:$PATH"
  tags: env

- cron: name="clear old kafka app logs" job="find /opt/kafka/default/logs -mtime +7 -exec rm {} \; > /dev/null" minute="0"
